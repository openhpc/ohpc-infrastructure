- name: Configure repos.openhpc.community (aarch64)
  hosts: repos_aarch64
  become: true
  gather_facts: true

  handlers:
    - name: Include handlers
      ansible.builtin.import_tasks: ../common/handlers.yml

  tasks:
    - name: Include history.yml
      ansible.builtin.include_tasks: ../common/history.yml
    - name: Install packages
      ansible.builtin.package:
        state: present
        name:
          - httpd
          - fail2ban-server
          - fail2ban-sendmail
          - goaccess
          - certbot
          - mod_ssl
          - rsync-daemon
          - lsof
          - strace
          - git
          - cargo
          - clippy
          - wget
          - ShellCheck
          - openssl-devel
          - moreutils

    - name: Include fail2ban.yml
      ansible.builtin.include_tasks: ../common/fail2ban.yml

    - name: Add the user 'ohpc'
      ansible.builtin.user:
        name: ohpc

    - name: Add the user 'rhel'
      ansible.builtin.user:
        name: rhel

    - name: Create directories
      ansible.builtin.file:
        dest: "{{ item }}"
        mode: "0755"
        state: directory
        owner: ohpc
        group: ohpc
      with_items:
        - /data
        - /rhel
        - /repos
        - /stats
        - /results

    - name: Mount /data partition
      ansible.posix.mount:
        path: /data
        src: UUID=92d0ec1e-73e0-47ed-8d0f-185e4e55fb0a
        opts: defaults,noatime
        state: mounted
        fstype: xfs

    - name: Create directories
      ansible.builtin.file:
        dest: "/data{{ item }}"
        mode: "0755"
        state: directory
        owner: root
        group: root
      with_items:
        - /weblogs

    - name: Bind mount {{ item }}
      ansible.posix.mount:
        path: "{{ item }}"
        src: "/data{{ item }}"
        opts: bind
        state: mounted
        fstype: none
      with_items:
        - /rhel
        - /repos
        - /stats
        - /results

    - name: Bind mount /var/log/httpd
      ansible.posix.mount:
        path: /var/log/httpd
        src: /data/weblogs
        opts: bind
        state: mounted
        fstype: none

    - name: Create directories
      ansible.builtin.file:
        dest: "/data{{ item }}"
        mode: "0755"
        state: directory
        owner: ohpc
        group: ohpc
      with_items:
        - /repos
        - /repos/vault
        - /repos/.files
        - /stats
        - /stats/old
        - /results

    - name: Mount /repos/vault partition
      ansible.posix.mount:
        path: /repos/vault
        src: UUID=5277343f-7070-4ce9-a296-97ffed2527be
        opts: defaults,noatime,ro
        state: mounted
        fstype: xfs

    - name: Create RHEL sync directories
      ansible.builtin.file:
        dest: "{{ item }}"
        mode: "0755"
        state: directory
        owner: rhel
        group: rhel
      with_items:
        - /rhel/etc
        - /rhel/bin
        - /rhel/var
        - /rhel/var/log
        - /rhel/var/cache
        - /rhel/repositories

    - name: Install reposync configuration
      ansible.builtin.template:
        src: repo.conf.j2
        dest: /rhel/etc/rhel-{{ item.version }}-{{ item.arch }}.conf
        owner: rhel
        group: rhel
        mode: "0644"
      with_items:
        - { version: 10, arch: "x86_64" }
        - { version: 10, arch: "aarch64" }
        - { version: 9, arch: "x86_64" }
        - { version: 9, arch: "aarch64" }
        - { version: 8, arch: "x86_64" }
        - { version: 8, arch: "aarch64" }
    - name: Install reposync scripts
      ansible.builtin.template:
        src: sync.sh.j2
        dest: /rhel/bin/sync-rhel-{{ item.version }}-{{ item.arch }}.sh
        owner: rhel
        group: rhel
        mode: "0755"
      with_items:
        - { version: 10, arch: "x86_64" }
        - { version: 10, arch: "aarch64" }
        - { version: 9, arch: "x86_64" }
        - { version: 9, arch: "aarch64" }
        - { version: 8, arch: "x86_64" }
        - { version: 8, arch: "aarch64" }

    - name: Install apache httpd config
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/etc/httpd/conf.d/{{ item }}"
        owner: root
        group: root
        mode: "0644"
      with_items:
        - rhel.conf
        - repos.conf
        - stats.conf
        - results.conf
        - welcome.conf
        - ssl.conf
      register: httpd_conf

    - name: Allow apache to modify files in /stats
      community.general.sefcontext:
        target: '/stats(/.*)?'
        setype: httpd_sys_content_t
        state: present

    - name: Allow apache to modify files in /stats
      community.general.sefcontext:
        target: '/results(/.*)?'
        setype: httpd_sys_content_t
        state: present

    - name: Allow apache to modify files in /stats
      community.general.sefcontext:
        target: '/repos(/.*)?'
        setype: public_content_t
        state: present

    - name: Allow apache to modify files in /stats
      community.general.sefcontext:
        target: '/rhel/repositories(/.*)?'
        setype: httpd_sys_content_t
        state: present

    - name: Apply new SELinux file context to filesystem
      ansible.builtin.command: restorecon -irv /stats /repos /rhel/repositories /results /var/log/httpd
      tags:
        - skip_ansible_lint

    - name: Enable httpd service
      ansible.builtin.systemd_service:
        name: httpd
        enabled: true
        state: started
      notify:
        - Restart httpd

    - name: Install /repos HEADER.html
      ansible.builtin.copy:
        src: HEADER.html.repos
        dest: /repos/HEADER.html
        owner: root
        group: root
        mode: "0644"

    - name: Install certbot timer
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/systemd/system
        owner: root
        group: root
        mode: "0644"
      with_items:
        - certbot-renewal.service
        - certbot-renewal.timer
      register: certbot_timer
      notify:
        - Systemd daemon-reload

    - name: Enable certbot timer
      ansible.builtin.systemd_service:
        name: certbot-renewal.timer
        state: started
        enabled: true
      when: certbot_timer.changed
      tags:
        - skip_ansible_lint

    - name: Install http support files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /repos/.files/
        owner: root
        group: root
        mode: "0644"
      with_items:
        - styles.css
        - test_error.png
        - test_ok.png
        - test_warning.png

    - name: Install /results HEADER.tmpl
      ansible.builtin.copy:
        src: HEADER.tmpl
        dest: /home/ohpc/HEADER.tmpl
        owner: root
        group: root
        mode: "0644"

    - name: Install rsyncd.conf
      ansible.builtin.copy:
        src: rsyncd.conf
        dest: /etc/rsyncd.conf
        owner: root
        group: root
        mode: "0644"
      register: rsyncd_conf

    - name: Enable rsyncd
      ansible.builtin.systemd_service:
        name: rsyncd
        state: started
        enabled: true
      when: rsyncd_conf.changed
      tags:
        - skip_ansible_lint

    - name: Install helper scripts
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /home/ohpc/bin/
        owner: root
        group: root
        mode: "0755"
      with_items:
        - update_results.sh
        - reposync.sh
        - build_dist_sums.sh
        - move-httpd-logs.sh
        - mk_dist.sh
        - make_repo.sh
      tags:
        - install-helper-scripts

    - name: Copy public keys
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /home/ohpc/
        owner: root
        group: root
        mode: "0644"
      with_items:
        - RPM-GPG-KEY-OpenHPC-3
        - RPM-GPG-KEY-OpenHPC-4
      tags:
        - copy-public-keys

    - name: Open /var/log/httpd to be accessible for user ohpc for log analysis
      ansible.builtin.cron:
        name: "chmod var/log/httpd"
        minute: "0"
        job: "chmod 755 /var/log/httpd > /dev/null"

    - name: Create /home/ohpc/ohpc-log-analyzer.git
      ansible.builtin.file:
        path: /home/ohpc/ohpc-log-analyzer.git
        state: directory
        owner: ohpc
        group: ohpc
        mode: "0755"

    - name: Checkout ohpc-log-analyzer.git
      ansible.builtin.git:
        repo: https://github.com/openhpc/ohpc-log-analyzer.git
        dest: /home/ohpc/ohpc-log-analyzer.git
        version: 1154ba673ee5eb02f3fc8634b5900fe881a07cf8
      become: true
      become_user: ohpc
      register: ohpc_log_analyzer_downloaded

    - name: Build ohpc-log-analyzer
      ansible.builtin.command: "cargo build --release"
      args:
        chdir: /home/ohpc/ohpc-log-analyzer.git
      become: true
      become_user: ohpc
      register: ohpc_log_analyzer_built
      when: ohpc_log_analyzer_downloaded.changed
      tags:
        - skip_ansible_lint

    - name: Install ohpc-log-analyzer
      ansible.builtin.copy:
        src: /home/ohpc/ohpc-log-analyzer.git/target/release/ohpc-log-analyzer
        dest: /usr/local/bin/ohpc-log-analyzer
        remote_src: true
        owner: root
        group: root
        mode: "0755"
      when: ohpc_log_analyzer_built.changed
      tags:
        - skip_ansible_lint

    - name: Run ohpc-log-analyzer via cron
      ansible.builtin.cron:
        name: "run ohpc-log-analyzer"
        minute: "15"
        user: ohpc
        job: >
          time /usr/local/bin/ohpc-log-analyzer
          /var/log/httpd/*-access*
          /var/log/httpd/old/access_log* >> /var/log/httpd/old/log-ohpc-log-analyzer

    - name: Run move-httpd-logs.sh via cron once a week
      ansible.builtin.cron:
        name: "run move-httpd-logs.sh once a week"
        special_time: monthly
        user: root
        job: /home/ohpc/bin/move-httpd-logs.sh

    - name: Install ohpc-log-analyzer logrotate
      ansible.builtin.copy:
        src: ohpc-log-analyzer
        dest: /etc/logrotate.d/
        owner: root
        group: root
        mode: "0644"
